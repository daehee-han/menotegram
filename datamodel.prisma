type User {
    id: ID! @id
    avatar: String
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    username: String! @unique
    email: String! @unique
    firstName: String @default(value: "")
    lastName: String
    bio: String
    followers: [User!]! @relation(name: "FollowRelation")
    following: [User!]! @relation(name: "FollowRelation")
    posts: [Post!]! @relation(name: "PostOfUser", onDelete: CASCADE)
    likes: [Like!]! @relation(name: "LikeOfUser", onDelete: CASCADE)
    comments: [Comment!]! @relation(name: "CommentOfUser", onDelete: CASCADE)
    rooms: [Room!]!
    loginSecret: String
}

type Post {
    id: ID! @id
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    location: String
    caption: String!
    user: User @relation(name: "PostOfUser")
    files: [File!]! @relation(name: "FileOfPost", onDelete: CASCADE)
    likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
    comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
}

type Like {
    id: ID! @id
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    user: User @relation(name: "LikeOfUser")
    post: Post @relation(name: "LikeOfPost")
}

type Comment {
    id: ID! @id
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    text: String!
    user: User @relation(name: "CommentOfUser")
    post: Post @relation(name: "CommentOfPost")
}

type File {
    id: ID! @id
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    url: String!
    post: Post @relation(name: "FileOfPost")
}

type Room {
    id: ID! @id
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    participants: [User!]!
    messages: [Message!]!
}

type Message {
    id: ID! @id
    updatedAt: DateTime! @updatedAt
    createdAt: DateTime! @createdAt
    text: String!
    from: User! @relation(name: "From")
    to: User! @relation(name: "To")
    room: Room!
}
